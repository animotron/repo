<?xml version="1.0" encoding="UTF-8"?>
<html-part-composition xmlns="animo/instance" xmlns:is="animo/relation/is" xmlns:an="animo/reference" xmlns:any="animo/query">
    <is:composition/>

    <do:xslt xmlns:do="animo/perform">
        <xsl:stylesheet xmlns="http://www.w3.org/1999/xhtml" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:have="animo/relation/have" xmlns:docbook="http://docbook.org/ns/docbook" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:the="animo/instance" exclude-result-prefixes="#all" version="2.0">

            <xsl:template match="/">
                <xsl:apply-templates select="(//have:content)[1]"/>
            </xsl:template>

            <xsl:template match="*">
                <xsl:apply-templates/>
            </xsl:template>

            <xsl:template match="have:title">
                <h1>
                    <xsl:value-of select="text()"/>
                </h1>
            </xsl:template>

            <xsl:template match="have:item">
                <li>
                    <xsl:apply-templates/>
                </li>
            </xsl:template>

            <xsl:template match="have:link">
                <a href="{have:uri}">
                    <xsl:apply-templates/>
                </a>
            </xsl:template>

            <xsl:template match="have:text">
                <xsl:value-of select="text()"/>
            </xsl:template>

            <xsl:template match="text()"/>

            <xsl:template match="xhtml:*">
                <xsl:copy inherit-namespaces="no">
                    <xsl:copy-of select="@*"/>
                    <xsl:apply-templates/>
                </xsl:copy>
            </xsl:template>

            <xsl:template match="xhtml:*/text() | docbook:*/text()">
                <xsl:copy/>
            </xsl:template>

            <xsl:template match="docbook:article">
                <div id="content">
                    <xsl:apply-templates select="docbook:section"/>
                </div>
            </xsl:template>

            <xsl:template match="docbook:section">
                <div class="post">
                    <xsl:attribute name="id">
                        <xsl:value-of select="@xml:id"/>
                    </xsl:attribute>
                    <xsl:apply-templates select="./node()"/>
                </div>
            </xsl:template>

            <xsl:template match="docbook:title">
                <div class="title">
                    <h2>
                        <xsl:value-of select="text()"/>
                    </h2>
                </div>
            </xsl:template>

            <xsl:template match="docbook:para">
                <div class="entry">
                    <xsl:apply-templates select="text() | *"/>
                </div>
            </xsl:template>

            <xsl:template match="docbook:figure">
                <img>
                    <xsl:attribute name="src">
                        <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@fileref"/>
                    </xsl:attribute>
                    <xsl:if test="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@id">
                        <xsl:attribute name="id">
                            <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@id"/>
                            <!-- TODO: Check -->
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@alt">
                        <xsl:attribute name="alt">
                            <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@alt"/>
                            <!-- TODO: Check -->
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:attribute name="width">
                        <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@width"/>
                    </xsl:attribute>
                    <xsl:attribute name="height">
                        <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@depth"/>
                    </xsl:attribute>
                    <xsl:if test="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@style">
                        <xsl:attribute name="style">
                            <xsl:value-of select="docbook:mediaobject/docbook:imageobject/docbook:imagedata/@style"/>
                            <!-- TODO: Check -->
                        </xsl:attribute>
                    </xsl:if>
                </img>
            </xsl:template>

            <xsl:template match="docbook:guimenu">
                <li>
                    <xsl:if test="@id">
                        <xsl:attribute name="id">
                            <xsl:value-of select="@id"/>
                        </xsl:attribute>
                    </xsl:if>
                    <h2>
                        <xsl:value-of select="docbook:title/text()"/>
                    </h2>
                    <ul>
                        <xsl:apply-templates select="docbook:guimenuitem"/>
                    </ul>
                </li>
            </xsl:template>

            <xsl:template match="docbook:guimenuitem">
                <li>
                    <xsl:apply-templates/>
                </li>
            </xsl:template>

            <xsl:template match="docbook:link">
                <a>
                    <xsl:attribute name="href" select="@xlink:href"/>
                    <xsl:apply-templates/>
                </a>
            </xsl:template>

        </xsl:stylesheet>

    </do:xslt>

</html-part-composition>