<?xml version="1.0" encoding="UTF-8"?>
<the:jquery-ui-theme-colors-css xmlns:do="animo/perform" xmlns:the="animo/instance">
    <do:xslt>
        <xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:have="animo/relation/have" xmlns:local="local" exclude-result-prefixes="#all" version="2.0">
            
            <xsl:variable name="DEFAULT-COLOR" select="'888888'"/>
            <xsl:variable name="HEX-DIGITS" select="'0123456789abcdef'"/>
            
            <xsl:function name="local:int2hex">
                <xsl:param name="in"/>
                <xsl:sequence select=" if ($in eq 0) then '0' else concat(if ($in gt 16) then local:int2hex($in idiv 16) else '', substring($HEX-DIGITS, ($in mod 16) + 1, 1))"/>
            </xsl:function>
            
            <xsl:function name="local:hex2int">
                <xsl:param name="in"/>
                <xsl:sequence select="if (string-length($in) eq 1)then string-length(substring-before($HEX-DIGITS, $in)) else 16 * local:hex2int(substring($in, 1, string-length($in)-1)) + string-length(substring-before($HEX-DIGITS, substring($in, string-length($in))))"/>
            </xsl:function>
            
            <xsl:function name="local:color2hex">
                <xsl:param name="color"/>
                <xsl:choose>
                    <xsl:when test="starts-with($color, '#')">
                        <xsl:value-of select="substring($color, 2, 6)"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'black'">
                        <xsl:value-of select="'000000'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'silver'">
                        <xsl:value-of select="'c0c0c0'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'gray'">
                        <xsl:value-of select="'808080'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'white'">
                        <xsl:value-of select="'ffffff'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'maroon'">
                        <xsl:value-of select="'800000'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'red'">
                        <xsl:value-of select="'ff0000'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'purple'">
                        <xsl:value-of select="'800080'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'fuchsia'">
                        <xsl:value-of select="'ff00ff'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'green'">
                        <xsl:value-of select="'008000'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'lime'">
                        <xsl:value-of select="'00ff00'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'olive'">
                        <xsl:value-of select="'808000'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'yellow'">
                        <xsl:value-of select="'ffff00'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'navy'">
                        <xsl:value-of select="'000080'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'blue'">
                        <xsl:value-of select="'0000ff'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'teal'">
                        <xsl:value-of select="'008080'"/>
                    </xsl:when>
                    <xsl:when test="$color eq 'aqua'">
                        <xsl:value-of select="'00ffff'"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$DEFAULT-COLOR"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:function>
            
            <xsl:function name="local:expand">
                <xsl:param name="hex"/>
                <xsl:value-of select="if (string-length($hex) eq 1) then concat('0', $hex) else $hex"/>
            </xsl:function>
            
            <xsl:function name="local:d2dd">
                <xsl:param name="hex"/>
                <xsl:value-of select="if (string-length($hex) eq 1) then concat($hex, $hex) else $hex"/>
            </xsl:function>
            
            <xsl:function name="local:k">
                <xsl:param name="hex"/>
                <xsl:param name="k"/>
                <xsl:value-of select="local:expand(local:int2hex((($k * local:hex2int(local:d2dd($hex))[. lt 255]), 1)[1]))"/>
            </xsl:function>
            
            <xsl:function name="local:grad">
                <xsl:param name="color"/>
                <xsl:param name="k"/>
                <xsl:variable name="hex" select="local:color2hex(lower-case($color))"/>
                <xsl:variable name="l" select="((2)[string-length($hex) eq 6], 1)[1]"/>
                <xsl:variable name="r" select="local:k(substring($hex, 1, $l), $k)"/>
                <xsl:variable name="g" select="local:k(substring($hex, $l + 1, $l), $k)"/>
                <xsl:variable name="b" select="local:k(substring($hex, $l * 2 + 1, $l), $k)"/>
                <xsl:value-of select="concat('#', $r, $g, $b)"/>
            </xsl:function>
            
            <xsl:variable name="color" select="(//have:widget-color)[1]"/>
            <xsl:variable name="start-color" select="local:grad($color, 1.1)"/>
            <xsl:variable name="end-color" select="local:grad($color, 0.9)"/>
            <xsl:variable name="border-color" select="local:grad($color, 0.8)"/>
            
            <xsl:template match="/">
                /**
                 * Header &amp; Default state
                 * Gradient type: light to dark
                 */
                    /* Widget: none, base states */
                    .ui-state-default, .ui-widget-content .ui-state-default, .ui-widget-header .ui-state-default,.ui-widget-header,
                    /* Widget: tabs, header */	
                    .ui-tabs .ui-widget-header,
                    /* Widget: slider, handle */
                    .ui-slider-handle,
                    /* Widget: datepicker, focussed date and previous/next button */
                    .ui-datepicker table .ui-state-highlight, .ui-datepicker table .ui-widget-content .ui-state-highlight, .ui-datepicker table .ui-widget-header .ui-state-highlight,
                    .ui-datepicker table .ui-state-focus, .ui-datepicker table .ui-widget-content .ui-state-focus, .ui-datepicker table .ui-widget-header .ui-state-focus,
                    .ui-autocomplete.ui-menu.ui-widget.ui-widget-content,
                    /* Widget: Accordion, both default and active header */
                    .ui-accordion .ui-accordion-header,
                    .ui-accordion .ui-accordion-header.ui-state-active,
                    .ui-accordion .ui-accordion-header.ui-state-hover,
                    .ui-accordion .ui-accordion-header.ui-state-focus,
                    /* Widget: HTML */
                    input[type='button'], input[type='reset'], input[type='submit'],
                    /* Widget: Uniform */
                    div.selector span, div.uploader span.action, div.button, div.checker, div.radio,
                    /* Widget: OpenLayers */
                    .olControlOverviewMapElement, 
                    .olControlLayerSwitcher .layersDiv
                    {
                        color: #333333;
                        border-color: #c1c1c1;
                        background: #ffffff;
                        background: -webkit-gradient(linear, left top, left bottom, from(#ffffff), to(#f2f2f2));
                        background: -moz-linear-gradient(top, #ffffff,  #f2f2f2);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f2f2f2');
                    }
                    
                /**
                *
                *    Uniform, cheked radio and checkbox
                *
                */    
                div.radio span.checked, div.checker span.checked  {
                    background: <xsl:value-of select="$color"/>;
                }
                
                /**
                 * Hover &amp; Focus state
                 * Gradient type: light to dark
                 */
                    /* Widget: none, base states */
                    .ui-state-hover, .ui-widget-content .ui-state-hover, .ui-widget-header .ui-state-hover, 
                    .ui-state-focus, .ui-widget-content .ui-state-focus, .ui-widget-header .ui-state-focus,
                    /* Widget: dialog, close button */
                    .ui-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close.ui-state-hover,
                    .ui-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close.ui-state-focus,
                    /* Widget: datepicker, date and previous/next button */
                    .ui-datepicker .ui-datepicker-prev:hover, .ui-datepicker .ui-datepicker-next:hover,
                    .ui-datepicker table .ui-state-hover,
                    .ui-datepicker table .ui-widget-content .ui-state-hover,
                    .ui-datepicker table .ui-widget-header .ui-state-hover,
                    /* Widget: HTML */
                    input[type='button']:hover, input[type='button']:focus,
                    input[type='reset']:hover, input[type='reset']:focus,
                    input[type='submit']:hover, input[type='submit']:focus,
                    /* Widget: Uniform */
                    div.uploader.focus span.action, div.uploader.hover span.action, div.uploader:hover span.action,
                    div.button.focus, div.button:focus, div.button:hover, div.button.hover,
                    div.selector.focus span, div.selector.hover span, div.selector:hover span
                    { 
                        color: #ffffff;
                        border-color: <xsl:value-of select="$border-color"/>; 
                        background: <xsl:value-of select="$start-color"/>;
                        background: -webkit-gradient(linear, left top, left bottom, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                        background: -moz-linear-gradient(top, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                    }
                
                /**
                 * Active state
                 * Gradient type: dark to light
                 */
                    /* Widget: none, base states */
                    .ui-state-active, .ui-widget-content .ui-state-active, .ui-widget-header .ui-state-active,
                    /* Widget: dialog, close button */
                    .ui-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close.ui-state-active,
                    /* Widget: datepicker, date and previous/next button */
                    .ui-datepicker .ui-datepicker-prev:active, .ui-datepicker .ui-datepicker-next:active,
                    .ui-datepicker table .ui-state-active,
                    .ui-datepicker table .ui-widget-content .ui-state-active,
                    .ui-datepicker table .ui-widget-header .ui-state-active,
                    /* Widget: Uniform */
                    div.uploader.active span.action, div.uploader:active span.action,
                    div.button.active, div.button:active,
                    div.selector.focus:active span,
                    div.selector:hover:active span,
                    div.selector.active:hover span,
                    div.selector.focus.active span
                    {
                        color: #ffffff;
                        border-color: <xsl:value-of select="$border-color"/>;  
                        background: <xsl:value-of select="$end-color"/>;
                        background: -webkit-gradient(linear, left top, left bottom, from(<xsl:value-of select="$end-color"/>), to(<xsl:value-of select="$start-color"/>));
                        background: -moz-linear-gradient(top, <xsl:value-of select="$end-color"/>,  <xsl:value-of select="$start-color"/>);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='<xsl:value-of select="$end-color"/>', endColorstr='<xsl:value-of select="$start-color"/>');
                    }
                
                .ui-autocomplete-input:hover, .ui-autocomplete-input:focus, .ui-progressbar,
                input.text:focus, input.email:focus, input.password:focus, textarea.uniform:focus
                {
                    background: #eff0f0;
                    background: -webkit-gradient(linear, left top, left bottom, from(#dfe0e1), to(#ffffff));
                    background: -moz-linear-gradient(top, #dfe0e1, #ffffff);
                    filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#dfe0e1', endColorstr='#ffffff');
                }
                
                .ui-autocomplete-input,
                input.text, input.email, input.password, textarea.uniform,
                div.uploader
                {
                    border-color: #a9a9a9; 
                    background: #eff0f0;
                    background: -webkit-gradient(linear, left top, left bottom, from(#edeff0), to(#ffffff));
                    background: -moz-linear-gradient(top, #edeff0, #ffffff);
                    filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#edeff0', endColorstr='#ffffff');
                }
                
                div.checker, div.radio {
                    background: #eff0f0;
                    border: 1px solid #a9a9a9;
                }
                
                
                .ui-slider-vertical .ui-widget-header,
                .ui-slider-horizontal .ui-widget-header
                { 
                    background: <xsl:value-of select="$start-color"/>;
                    color: #ffffff;
                }
                
                .ui-slider-horizontal .ui-widget-header
                { 
                    background: -webkit-gradient(linear, left top, left bottom, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                    background: -moz-linear-gradient(top, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                    filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                }
                
                .ui-slider-vertical .ui-widget-header
                { 
                    background: -webkit-gradient(linear, left top, right top, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                    background: -moz-linear-gradient(left, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                    filter:  progid:DXImageTransform.Microsoft.gradient(GradientType='0', startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                }
                
                
                .ui-slider-horizontal .ui-slider-handle:hover,
                .ui-slider-vertical .ui-slider-handle:hover
                { 
                border-color:  #c1c1c1;
                background: #eff0f0;
                background: -webkit-gradient(linear, left top, left bottom, from(#ffffff), to(#cacbcc));
                background: -moz-linear-gradient(top, #ffffff,  #cacbcc);
                filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#cacbcc');
                }
                
                .ui-slider-horizontal .ui-slider-handle:active, .ui-slider-horizontal .ui-slider-handle:focus,
                .ui-slider-vertical .ui-slider-handle:active, .ui-slider-vertical .ui-slider-handle:focus
                { 
                border-color:  #c1c1c1;
                background: #eff0f0;
                background: -webkit-gradient(linear, left top, left bottom, from(#cacbcc), to(#ffffff));
                background: -moz-linear-gradient(top, #cacbcc,  #ffffff);
                filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#cacbcc', endColorstr='#ffffff');
                }
                
                .ui-layout-pane
                { 
                border-color:  #c1c1c1;
                }
                
                .ui-layout-resizer
                { 
                border-color:  #c1c1c1;
                background: #eff0f0;
                }
                
                .ui-layout-resizer-hover, .ui-layout-resizer-draging, .ui-layout-toggler
                { 
                border-color:  #c1c1c1;
                background: #cacbcc;
                }
                
                .ui-layout-toggler-east-hover, .ui-layout-toggler-west-hover
                { 
                border-color:  <xsl:value-of select="$border-color"/>;
                background: -webkit-gradient(linear, left top, right top, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                background: -moz-linear-gradient(left, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                filter:  progid:DXImageTransform.Microsoft.gradient(GradientType='0', startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                }
                
                .ui-layout-toggler-north-hover, .ui-toggler-south-hover
                { 
                border-color:  <xsl:value-of select="$border-color"/>;
                background: -webkit-gradient(linear, left top, left bottom, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                background: -moz-linear-gradient(top, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                }
                
                .ui-progressbar .ui-widget-header
                {
                    border-color: <xsl:value-of select="$border-color"/>;
                    background: <xsl:value-of select="$start-color"/>;
                    background: -webkit-gradient(linear, left top, left bottom, from(<xsl:value-of select="$start-color"/>), to(<xsl:value-of select="$end-color"/>));
                    background: -moz-linear-gradient(top, <xsl:value-of select="$start-color"/>,  <xsl:value-of select="$end-color"/>);
                    filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='<xsl:value-of select="$start-color"/>', endColorstr='<xsl:value-of select="$end-color"/>');
                    color: #ffffff;
                }
                
                /**
                 * Dialog and popup
                 * Gradient type: light to dark
                 */
                    .ui-datepicker,
                    .ui-dialog 
                    {
                        border-color: #ffffff;
                        -webkit-box-shadow: 0px 0px 5px #282425;
                        -moz-box-shadow: 0px 0px 5px #282425;
                        box-shadow: 0px 0px 5px #282425;
                    }
                    
                    .ui-datepicker .ui-datepicker-header,
                    .ui-dialog .ui-dialog-titlebar
                    {
                        background: #4c4c4e;
                        background: -webkit-gradient(linear, left top, left bottom, from(#4c4c4e), to(#282425));
                        background: -moz-linear-gradient(top, #4c4c4e,  #282425);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#4c4c4e', endColorstr='#282425');
                        color: #ffffff;
                        
                        /*
                        background: #ededed;
                        background: -webkit-gradient(linear, left top, left bottom, from(#ededed), to(#e1e1e1));
                        background: -moz-linear-gradient(top, #ededed,  #e1e1e1);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#ededed', endColorstr='#e1e1e1');
                        color: #333333;
                        */
                    }
                    
                    .ui-dialog .ui-dialog-buttonpane {
                        background: #f7f7f8;
                    }
                    
                    .ui-datepicker .ui-icon, .ui-dialog .ui-dialog-titlebar-close .ui-icon,
                    .wijmo-wijdialog-captionbutton .ui-icon {
                        background-image: url(../images/ui-icons_ffffff_256x240.png);
                    }
                    
                    
                    .ui-datepicker .ui-datepicker-prev, .ui-datepicker .ui-datepicker-next,
                    .ui-dialog .ui-dialog-titlebar .ui-dialog-titlebar-close,
                    .wijmo-wijdialog-captionbutton {
                        background: #6a6b6e;
                        border-color: #000000;
                        background: -webkit-gradient(linear, left top, left bottom, from(#6a6b6e), to(#3e3e3e));
                        background: -moz-linear-gradient(top, #6a6b6e,  #3e3e3e);
                        filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#6a6b6e', endColorstr='#3e3e3e');
                        color: #ffffff;
                    }
            </xsl:template>
            
        </xsl:stylesheet>
        
    </do:xslt>
    
</the:jquery-ui-theme-colors-css>